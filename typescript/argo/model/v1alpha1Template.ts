/**
 * Argo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IoK8sApiCoreV1Affinity } from './ioK8sApiCoreV1Affinity';
import { IoK8sApiCoreV1Container } from './ioK8sApiCoreV1Container';
import { IoK8sApiCoreV1Toleration } from './ioK8sApiCoreV1Toleration';
import { IoK8sApiCoreV1Volume } from './ioK8sApiCoreV1Volume';
import { V1alpha1ArtifactLocation } from './v1alpha1ArtifactLocation';
import { V1alpha1DAGTemplate } from './v1alpha1DAGTemplate';
import { V1alpha1Inputs } from './v1alpha1Inputs';
import { V1alpha1Metadata } from './v1alpha1Metadata';
import { V1alpha1Outputs } from './v1alpha1Outputs';
import { V1alpha1ResourceTemplate } from './v1alpha1ResourceTemplate';
import { V1alpha1RetryStrategy } from './v1alpha1RetryStrategy';
import { V1alpha1ScriptTemplate } from './v1alpha1ScriptTemplate';
import { V1alpha1UserContainer } from './v1alpha1UserContainer';
import { V1alpha1WorkflowStep } from './v1alpha1WorkflowStep';

/**
* Template is a reusable and composable unit of execution in a workflow
*/
export class V1alpha1Template {
    /**
    * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
    */
    'activeDeadlineSeconds'?: number;
    'affinity'?: IoK8sApiCoreV1Affinity;
    'archiveLocation'?: V1alpha1ArtifactLocation;
    'container'?: IoK8sApiCoreV1Container;
    /**
    * Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
    */
    'daemon'?: boolean;
    'dag'?: V1alpha1DAGTemplate;
    /**
    * InitContainers is a list of containers which run before the main container.
    */
    'initContainers'?: Array<V1alpha1UserContainer>;
    'inputs'?: V1alpha1Inputs;
    'metadata'?: V1alpha1Metadata;
    /**
    * Name is the name of the template
    */
    'name': string;
    /**
    * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
    */
    'nodeSelector'?: { [key: string]: string; };
    'outputs'?: V1alpha1Outputs;
    /**
    * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
    */
    'parallelism'?: number;
    /**
    * Priority to apply to workflow pods.
    */
    'priority'?: number;
    /**
    * PriorityClassName to apply to workflow pods.
    */
    'priorityClassName'?: string;
    'resource'?: V1alpha1ResourceTemplate;
    'retryStrategy'?: V1alpha1RetryStrategy;
    /**
    * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
    */
    'schedulerName'?: string;
    'script'?: V1alpha1ScriptTemplate;
    /**
    * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
    */
    'sidecars'?: Array<V1alpha1UserContainer>;
    /**
    * Steps define a series of sequential/parallel workflow steps
    */
    'steps'?: Array<Array<V1alpha1WorkflowStep>>;
    /**
    * SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time
    */
    'suspend'?: object;
    /**
    * Tolerations to apply to workflow pods.
    */
    'tolerations'?: Array<IoK8sApiCoreV1Toleration>;
    /**
    * Volumes is a list of volumes that can be mounted by containers in a template.
    */
    'volumes'?: Array<IoK8sApiCoreV1Volume>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "activeDeadlineSeconds",
            "baseName": "activeDeadlineSeconds",
            "type": "number"
        },
        {
            "name": "affinity",
            "baseName": "affinity",
            "type": "IoK8sApiCoreV1Affinity"
        },
        {
            "name": "archiveLocation",
            "baseName": "archiveLocation",
            "type": "V1alpha1ArtifactLocation"
        },
        {
            "name": "container",
            "baseName": "container",
            "type": "IoK8sApiCoreV1Container"
        },
        {
            "name": "daemon",
            "baseName": "daemon",
            "type": "boolean"
        },
        {
            "name": "dag",
            "baseName": "dag",
            "type": "V1alpha1DAGTemplate"
        },
        {
            "name": "initContainers",
            "baseName": "initContainers",
            "type": "Array<V1alpha1UserContainer>"
        },
        {
            "name": "inputs",
            "baseName": "inputs",
            "type": "V1alpha1Inputs"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "V1alpha1Metadata"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "nodeSelector",
            "baseName": "nodeSelector",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "outputs",
            "baseName": "outputs",
            "type": "V1alpha1Outputs"
        },
        {
            "name": "parallelism",
            "baseName": "parallelism",
            "type": "number"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "number"
        },
        {
            "name": "priorityClassName",
            "baseName": "priorityClassName",
            "type": "string"
        },
        {
            "name": "resource",
            "baseName": "resource",
            "type": "V1alpha1ResourceTemplate"
        },
        {
            "name": "retryStrategy",
            "baseName": "retryStrategy",
            "type": "V1alpha1RetryStrategy"
        },
        {
            "name": "schedulerName",
            "baseName": "schedulerName",
            "type": "string"
        },
        {
            "name": "script",
            "baseName": "script",
            "type": "V1alpha1ScriptTemplate"
        },
        {
            "name": "sidecars",
            "baseName": "sidecars",
            "type": "Array<V1alpha1UserContainer>"
        },
        {
            "name": "steps",
            "baseName": "steps",
            "type": "Array<Array<V1alpha1WorkflowStep>>"
        },
        {
            "name": "suspend",
            "baseName": "suspend",
            "type": "object"
        },
        {
            "name": "tolerations",
            "baseName": "tolerations",
            "type": "Array<IoK8sApiCoreV1Toleration>"
        },
        {
            "name": "volumes",
            "baseName": "volumes",
            "type": "Array<IoK8sApiCoreV1Volume>"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1Template.attributeTypeMap;
    }
}

