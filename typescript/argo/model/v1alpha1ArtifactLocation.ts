/**
 * Argo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1alpha1ArtifactoryArtifact } from './v1alpha1ArtifactoryArtifact';
import { V1alpha1GitArtifact } from './v1alpha1GitArtifact';
import { V1alpha1HDFSArtifact } from './v1alpha1HDFSArtifact';
import { V1alpha1HTTPArtifact } from './v1alpha1HTTPArtifact';
import { V1alpha1RawArtifact } from './v1alpha1RawArtifact';
import { V1alpha1S3Artifact } from './v1alpha1S3Artifact';

/**
* ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
*/
export class V1alpha1ArtifactLocation {
    /**
    * ArchiveLogs indicates if the container logs should be archived
    */
    'archiveLogs'?: boolean;
    'artifactory'?: V1alpha1ArtifactoryArtifact;
    'git'?: V1alpha1GitArtifact;
    'hdfs'?: V1alpha1HDFSArtifact;
    'http'?: V1alpha1HTTPArtifact;
    'raw'?: V1alpha1RawArtifact;
    's3'?: V1alpha1S3Artifact;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "archiveLogs",
            "baseName": "archiveLogs",
            "type": "boolean"
        },
        {
            "name": "artifactory",
            "baseName": "artifactory",
            "type": "V1alpha1ArtifactoryArtifact"
        },
        {
            "name": "git",
            "baseName": "git",
            "type": "V1alpha1GitArtifact"
        },
        {
            "name": "hdfs",
            "baseName": "hdfs",
            "type": "V1alpha1HDFSArtifact"
        },
        {
            "name": "http",
            "baseName": "http",
            "type": "V1alpha1HTTPArtifact"
        },
        {
            "name": "raw",
            "baseName": "raw",
            "type": "V1alpha1RawArtifact"
        },
        {
            "name": "s3",
            "baseName": "s3",
            "type": "V1alpha1S3Artifact"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1ArtifactLocation.attributeTypeMap;
    }
}

